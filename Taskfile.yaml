version: '3'

dotenv: ['.env']

env:
  VERSION: '{{ .VERSION | default ( now | unixEpoch ) }}'
  BASE_IMAGE: '{{ .BASE_IMAGE | default "alpine" }}'
  IMAGE_TAG: '{{ .BASE_IMAGE }}-{{ .VERSION }}'
  PROJECT: '{{ .PROJECT | default "cv" }}'

tasks:
  build:
    cmds:
      - scripts/build.sh

  json:
    deps:
      - build
    cmds:
      - yq '. | to_json' {{ .BUILD_PATH }}/{{ .CV }}.yaml > {{ .BUILD_PATH }}/{{ .CV }}.json

  skill_by_level:
    env:
      LEVEL: "medium"
    cmds:
      - yq '.skills[] | select(.level == "{{ .LEVEL }}") | .name' {{ .SRC_PATH }}/skills.yaml

  docker-build:
    cmds:
      - docker build -t cv-builder:{{ .IMAGE_TAG }} -f Dockerfile.{{ .BASE_IMAGE }} --target builder .
      - docker build -t cv:{{ .IMAGE_TAG }} -f Dockerfile.{{ .BASE_IMAGE }} .

  docker-run-task:
    deps:
      - docker-builder
    cmds:
      - docker run --rm -ti cv-builder:{{ .IMAGE_TAG }} {{ .CLI_ARGS }}

  docker-server-foreground:
    cmds:
      - docker-compose -p {{ .PROJECT }} up

  docker-server-background:
    cmds:
      - docker-compose -p {{ .PROJECT }} up -d

  docker-server-stop:
    cmds:
      - docker-compose -p {{ .PROJECT }} down -v --remove-orphans

  test-ha-server:
    cmds:
      - while true; do curl -v http://localhost:8080 & sleep 1; done;
